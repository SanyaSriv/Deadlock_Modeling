{
    "topology": "unidirectional",
    "NumberNodes": 3,
    "BufferSpaces": 3,
    "routers": [],
    "NewVariables": {
    },
    "NewInit": ["IntentToSendRequest[n1] := 0;"],
    "NewArrays": ["var IntentToSendRequest: array[NodeIDs] of 0..2;"],
    "rule_pre_cond": 
    {
        "Send request": "(n1 != n2) & (TailPointers[ExitPath[n1]][n1] < BufferSpace) & (IntentToSendRequest[n1] != 2)",
        "Process fwd_request": "(IncomingQueue[n1][EntryPath[n1]][0].msg_type = fwd_request) & (TailPointers[ExitPath[n1]][n1] < BufferSpace) & (IntentToSendRequest[n1] != 1)",
        "Process request": "(IncomingQueue[n1][EntryPath[n1]][0].msg_type = request) & (TailPointers[ExitPath[n1]][n1] < BufferSpace) & (IntentToSendRequest[n1] != 1)",
        "Process fwd_response": "(IncomingQueue[n1][EntryPath[n1]][0].msg_type = fwd_response) & (TailPointers[ExitPath[n1]][n1] < BufferSpace) & (IntentToSendRequest[n1] != 1)",
        "Process response": "(IncomingQueue[n1][EntryPath[n1]][0].msg_type = response) & (IntentToSendRequest[n1] != 1)"
    },
    "rule_fire": 
    {
        "Send request": "if ((IntentToSendRequest[n1] = 1) | (TailPointers[n1][EntryPath[n1]] = 0)) then\n    SendRequest(n1, ExitPath[n1], n2);\n    IntentToSendRequest[n1] := 0;\nelse\n    IntentToSendRequest[n1] := 2;\nendif;",
        "Process fwd_request": "ProcessFwdRequest(n1, EntryPath[n1], ExitPath[n1]);",
        "Process request": "ProcessRequest(n1, EntryPath[n1], ExitPath[n1]);",
        "Process fwd_response": "ProcessFwdResponse(n1, EntryPath[n1], ExitPath[n1]);",
        "Process response": "ProcessResponse(n1, EntryPath[n1]);\nif IntentToSendRequest[n1] = 2 then\n    IntentToSendRequest[n1] := 1\nendif;"
    }
}